type CyclesResponse = variant {
  Refunded : record { text; opt nat64 };
  CanisterCreated : principal;
  ToppedUp;
};
type ICPTs = record { e8s : nat64 };
type Result = variant { Ok : CyclesResponse; Err : text };
type TransactionNotification = record {
  to : principal;
  to_subaccount : opt vec nat8;
  from : principal;
  memo : nat64;
  from_subaccount : opt vec nat8;
  amount : ICPTs;
  block_height : nat64;
};
type SetAuthorizedSubnetworkListArgs = record {
  who : opt principal;
  subnets : vec principal;
};
service : {
  set_authorized_subnetwork_list : (SetAuthorizedSubnetworkListArgs) -> ();
  transaction_notification : (TransactionNotification) -> (Result);
}
